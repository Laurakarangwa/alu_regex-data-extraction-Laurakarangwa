function extractData() {
  // Get the text input
  const text = document.getElementById('inputText').value;
  // Get the div to display results and clear previous content
  const resultsDiv = document.getElementById('results');
  resultsDiv.innerHTML = '';

  // Regex patterns for different data types
  // Patterns cover common formats and edge cases where applicable
  const patterns = {
    // Email: supports most common emails, case insensitive for domain
    "Email Addresses": /\b[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}\b/g,

    // URLs: supports http/https, optional www, subdomains, paths, query strings
    "URLs": /https?:\/\/(?:www\.)?[\w\-]+(\.[\w\-]+)+([\/\w\-.,@?^=%&:\/~+#]*)?/g,

    // Phone Numbers: supports optional country code, parentheses, spaces, dots, dashes
    "Phone Numbers": /(\+?\d{1,2}\s?)?(\(?\d{3}\)?[\s.-]?)?\d{3}[\s.-]?\d{4}/g,

    // Credit Card Numbers: 16 digits, optional spaces or dashes between groups of 4 digits
    "Credit Card Numbers": /\b(?:\d{4}[-\s]?){3}\d{4}\b/g,

    // Time (12/24hr): supports 12-hour with AM/PM and 24-hour formats
    "Time (12/24hr)": /\b((1[0-2]|0?[1-9]):([0-5][0-9]) ?([AaPp][Mm]))|([01]?[0-9]|2[0-3]):[0-5][0-9]\b/g,

    // HTML Tags: matches any tag with attributes or self-closing
    "HTML Tags": /<[^>]+>/g
  };

  // Extract and display matches for each pattern
  for (const [label, regex] of Object.entries(patterns)) {
    const matches = text.match(regex);
    const section = document.createElement('div');
    section.innerHTML = `<h3>${label}</h3>`;

    if (matches && matches.length > 0) {
      const list = document.createElement('ul');
      matches.forEach(match => {
        const li = document.createElement('li');
        li.textContent = match;
        list.appendChild(li);
      });
      section.appendChild(list);
    } else {
      section.innerHTML += '<p>No matches found.</p>';
    }
    resultsDiv.appendChild(section);
  }
}
